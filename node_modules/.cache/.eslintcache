[{"/home/jjmora/Escritorio/prueba/src/index.tsx":"1","/home/jjmora/Escritorio/prueba/src/reportWebVitals.ts":"2","/home/jjmora/Escritorio/prueba/src/App.tsx":"3","/home/jjmora/Escritorio/prueba/src/views/CarsView.tsx":"4","/home/jjmora/Escritorio/prueba/src/views/FormView.tsx":"5","/home/jjmora/Escritorio/prueba/src/components/HeaderComponent.tsx":"6","/home/jjmora/Escritorio/prueba/src/components/CarsComponent.tsx":"7"},{"size":554,"mtime":1662067166120,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1662062337712,"results":"10","hashOfConfig":"9"},{"size":696,"mtime":1664728478451,"results":"11","hashOfConfig":"9"},{"size":615,"mtime":1664732336696,"results":"12","hashOfConfig":"9"},{"size":1494,"mtime":1664732397308,"results":"13","hashOfConfig":"9"},{"size":643,"mtime":1662069565631,"results":"14","hashOfConfig":"9"},{"size":802,"mtime":1664732336028,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1vhysc7",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"19"},"/home/jjmora/Escritorio/prueba/src/index.tsx",[],[],[],"/home/jjmora/Escritorio/prueba/src/reportWebVitals.ts",[],[],"/home/jjmora/Escritorio/prueba/src/App.tsx",[],[],"/home/jjmora/Escritorio/prueba/src/views/CarsView.tsx",[],[],"/home/jjmora/Escritorio/prueba/src/views/FormView.tsx",["40"],[],"import axios from \"axios\";\nimport {useContext} from 'react'\nimport {Context} from '../App'\nimport React from \"react\";\n\ninterface Car {\n    image:any | null;\n    company:String| null;\n    model:String| null;\n}\nconst FormView: React.FC = (\n   \n) =>{\n\n    const [image, setImage] = React.useState('');\n\n    const cars:any  =useContext(Context)\n\n\n    const getData =async () => {\n        const imagenGato:any = await axios.get(\"https://api.thecatapi.com/v1/images/search?limit=1\")\n\n        setImage(imagenGato.data[0].url)\n    }\n    React.useEffect( () => {\n        getData()\n    \n      }, [])\n\n\n    const saveCar =()=>{\n\n        let newImage:any = document.querySelector(\"#image\")\n        newImage = newImage.value\n        let newCompany:any = document.querySelector(\"#company\")\n        newCompany = newCompany.value\n        let newModel:any = document.querySelector(\"#model\")\n        newModel = newModel.value\n\n    \n       const newCar: Car = {\n           image:image,\n           company:newCompany,\n           model:newModel\n\n       }\n\n       cars.push(newCar)\n\n    }\n\n\n    return(\n        <form>\n            <label htmlFor='company' >Company:</label>\n            <input id='company'></input>\n            <label htmlFor='model'>Model:</label>\n            <input id='model'></input>\n            <label htmlFor='image'>Select a pic:</label>\n            <input id=\"image\"></input>\n            <button type=\"button\" onClick={saveCar}>Enviar</button>\n        </form>\n    )\n}\n\nexport default FormView\n","/home/jjmora/Escritorio/prueba/src/components/HeaderComponent.tsx",[],[],"/home/jjmora/Escritorio/prueba/src/components/CarsComponent.tsx",["41","42"],[],"\n\n\ninterface CarsComponentProps {\n    image:string;\n    company:String;\n    model:String;\n}\n\nconst CarsComponent: React.FC<CarsComponentProps> = ({\n    image,\n    company,\n    model\n}) =>{\n\n    interface CarsComponent {\n        image:string;\n        company:String;\n        model:String;\n    }\n\n    var carsInSale: string | null |CarsComponent = localStorage.getItem('cars')\n\n    if(carsInSale){\n        carsInSale = JSON.parse(carsInSale)\n        console.log(carsInSale)\n    }\n\n\n    return(\n    <>\n        <link rel=\"stylesheet\" href='css/CarsComponent.css'></link>  \n\n    <div>\n        <img src={image}></img>\n\n        <a>\n            <h2>\n                X\n            </h2>\n        </a>\n\n        <p>{company}</p>\n        <p>{model}</p>\n        \n    </div>\n    </>\n)\n}\nexport default CarsComponent;\n",{"ruleId":"43","severity":1,"message":"44","line":34,"column":9,"nodeType":"45","messageId":"46","endLine":34,"endColumn":17},{"ruleId":"47","severity":1,"message":"48","line":35,"column":9,"nodeType":"49","endLine":35,"endColumn":26},{"ruleId":"50","severity":1,"message":"51","line":37,"column":9,"nodeType":"49","endLine":37,"endColumn":12},"@typescript-eslint/no-unused-vars","'newImage' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]